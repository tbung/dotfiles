#!/usr/bin/env bash

# set -x

# TODO: If only the initial window is open, replace it (How?)
source $HOME/.profile

function get_ssh_hosts() {
    rg -IN 'Host ([0-9a-zA-Z\-]+)' -r 'ssh $1' ~/.ssh/config
}

function ssh_command_to_hostname() {
    echo "$1" | rg -IN 'ssh ([0-9a-zA-Z\-]+)' -r '$1'
}

function get_kitty_tab_id_by_name() {
    q1='[.[0].tabs | .[] | {id: (.id), title: .title}] | map(select(.title | startswith("'
    q2='"))) | .[0].id'
    kitty @ls | jq "$q1$1$q2"
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$( (
        # All project directories
        find ${HOME}/Projects -mindepth 1 -maxdepth 1 -type d

        # The wiki directory
        echo "${HOME}/wiki"

        # ssh hosts
        echo "$(get_ssh_hosts)"
    ) | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
cwd=$selected

if [[ $selected_name = $'ssh '* ]]; then
    selected_name=$(ssh_command_to_hostname "${selected_name}")
    cwd=$HOME
    cmd=($SHELL -c "$selected ; read")
fi

id=$(get_kitty_tab_id_by_name "${selected_name}")

if [[ $id == 'null' ]]; then
    kitty @new-window --new-tab --title $selected_name --cwd $cwd "${cmd[@]}"
else
    kitty @focus-tab -m "id:$id"
fi

# set +x
